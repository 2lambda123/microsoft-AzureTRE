---
name: Publish Bundles

on:
  push:
    branches: [ross/ActionsInDevContainer]
  workflow_dispatch:

env:
  USE_ENV_VARS_NOT_FILES: true
  DOCKER_BUILDKIT: 1
  TF_INPUT: 0 # No input supplied to Terraform
  TF_IN_AUTOMATION: 1 # No prompts

jobs:
  publish_and_register_bundles_container:
    name: Register Bundles
    runs-on: ubuntu-latest
    if: |
      github.event.name == 'schedule'
      || github.event_name == 'push'
      || github.event_name == 'workflow_dispatch'
      || contains(github.event.pull_request.labels.*.name, 'safe to test')
    strategy:
      matrix:
        include:
        # bundles type can be inferred from the bundle
        # dir (but this is more explicit)
          - {BUNDLE_TYPE: "workspace",
             BUNDLE_DIR: "./templates/workspaces/base"}
          - {BUNDLE_TYPE: "workspace",
             BUNDLE_DIR: "./templates/workspaces/innereye"}
          - {BUNDLE_TYPE: "workspace_service",
             BUNDLE_DIR: "./templates/workspace_services/guacamole"}
          - {BUNDLE_TYPE: "workspace_service",
             BUNDLE_DIR: "./templates/workspace_services/azureml"}
          - {BUNDLE_TYPE: "workspace_service",
             BUNDLE_DIR: "./templates/workspace_services/devtestlabs"}
          - {BUNDLE_TYPE: "workspace_service",
             BUNDLE_DIR: "./templates/workspace_services/innereye"}
    environment: Dev
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Docker BuildKit
        uses: docker/setup-buildx-action@v1

      - name: Login to Container Registry
        uses: docker/login-action@v1
        with:
          registry: ${{ secrets.ACTIONS_ACR_NAME }}.azurecr.io
          username: ${{ secrets.ACTIONS_ACR_NAME }}
          password: ${{ secrets.ACTIONS_ACR_PASSWORD }}

      - name: Set Variables
        run: |
          echo "USER_UID=$(id -u)" >> $GITHUB_ENV
          echo "USER_GID=$(id -g)" >> $GITHUB_ENV

      - name: Register bundles
        shell: bash
        env:
          ARM_TENANT_ID: "${{ secrets.ARM_TENANT_ID }}"
          ARM_CLIENT_ID: "${{ secrets.ARM_CLIENT_ID }}"
          ARM_CLIENT_SECRET: "${{ secrets.ARM_CLIENT_SECRET }}"
          ARM_SUBSCRIPTION_ID: "${{ secrets.ARM_SUBSCRIPTION_ID }}"
          RESOURCE: "${{ secrets.API_CLIENT_ID }}"
          AUTH_TENANT_ID: "${{ secrets.AAD_TENANT_ID }}"
          CLIENT_ID: "${{ secrets.TEST_APP_ID }}"
          USERNAME: "${{ secrets.TEST_USER_NAME }}"
          PASSWORD: "${{ secrets.TEST_USER_PASSWORD }}"
          ACR_NAME: ${{ secrets.ACR_NAME }}
          TRE_URL: "https://${{secrets.TRE_ID}}.${{secrets.LOCATION}}.cloudapp.azure.com"
          BUNDLE_TYPE: ${{ matrix.BUNDLE_TYPE }}
        run: |
          docker run --rm --mount \
            "type=bind,src=${{ github.workspace }},dst=/workspaces/tre" \
            -v /var/run/docker.sock:/var/run/docker.sock \
            --workdir /workspaces/tre \
            --user vscode \
            -e TF_IN_AUTOMATION=1 \
            -e ARM_CLIENT_ID \
            -e ARM_CLIENT_SECRET \
            -e ARM_TENANT_ID \
            -e ARM_SUBSCRIPTION_ID \
            -e RESOURCE \
            -e AUTH_TENANT_ID \
            -e CLIENT_ID \
            -e USERNAME \
            -e PASSWORD \
            -e ACR_NAME \
            -e TRE_URL \
            -e BUNDLE_TYPE \
            '${{ secrets.ACTIONS_ACR_NAME }}.azurecr.io/tredev:latest' \
          bash -c "make build-and-register-bundle DIR=${{ matrix.BUNDLE_DIR }}"

  publish_and_register_bundles:
    name: Register Bundle
    runs-on: ubuntu-latest
    if: |
      github.event.name == 'schedule'
      || github.event_name == 'push'
      || github.event_name == 'workflow_dispatch'
      || contains(github.event.pull_request.labels.*.name, 'safe to test')
    strategy:
      matrix:
        include:
        # bundles type can be inferred from the bundle
        # dir (but this is more explicit)
          - {BUNDLE_TYPE: "workspace",
             BUNDLE_DIR: "./templates/workspaces/base"}
          - {BUNDLE_TYPE: "workspace",
             BUNDLE_DIR: "./templates/workspaces/innereye"}
          - {BUNDLE_TYPE: "workspace_service",
             BUNDLE_DIR: "./templates/workspace_services/guacamole"}
          - {BUNDLE_TYPE: "workspace_service",
             BUNDLE_DIR: "./templates/workspace_services/azureml"}
          - {BUNDLE_TYPE: "workspace_service",
             BUNDLE_DIR: "./templates/workspace_services/devtestlabs"}
          - {BUNDLE_TYPE: "workspace_service",
             BUNDLE_DIR: "./templates/workspace_services/innereye"}
    environment: Dev
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Install yq
        run: |
          sudo wget -O /usr/local/bin/yq \
            https://github.com/mikefarah/yq/releases/download/v4.13.0/yq_linux_amd64
          sudo chmod +x /usr/local/bin/yq
      - name: Install porter
        run: |
          curl -L https://cdn.porter.sh/v0.38.7/install-linux.sh | bash
          ~/.porter/porter mixin install docker
          echo "~/.porter/" >> $GITHUB_PATH
      - name: Publish and register bundles
        shell: bash
        env:
          RESOURCE: "${{ secrets.API_CLIENT_ID }}"
          AUTH_TENANT_ID: "${{ secrets.AAD_TENANT_ID }}"
          CLIENT_ID: "${{ secrets.TEST_APP_ID }}"
          USERNAME: "${{ secrets.TEST_USER_NAME }}"
          PASSWORD: "${{ secrets.TEST_USER_PASSWORD }}"
          ACR_NAME: ${{ secrets.ACR_NAME }}
          TRE_URL: "https://${{secrets.TRE_ID}}.${{secrets.LOCATION}}.cloudapp.azure.com"
          BUNDLE_TYPE: ${{ matrix.BUNDLE_TYPE }}
        run: |
          set -o errexit
          set -o pipefail
          set -o nounset
          make build-and-register-bundle DIR=${{ matrix.BUNDLE_DIR }}

---
name: Import TF Resources

on:
  workflow_dispatch:

env:
  USE_ENV_VARS_NOT_FILES: true
  TF_INPUT: 0 # interactive is off
  TF_IN_AUTOMATION: 1 # Run in headless mode

jobs:
  deploy_management:
    name: Import TF Resources
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Build new devcontainer
        shell: bash
        env:
            DOCKER_BUILDKIT: 1
        run: |
          set -e
          USER_UID=$(id -u)
          USER_GID=$(id -g)
          docker build . \
            -t 'tredev:latest' \
            -f '.devcontainer/Dockerfile' \
            --cache-from ${{ secrets.ACTIONS_ACR_NAME }}.azurecr.io/tredev:latest \
            --build-arg BUILDKIT_INLINE_CACHE=1 \
            --build-arg USER_UID="${USER_UID}" \
            --build-arg USER_GID="${USER_GID}"
          docker image tag tredev:latest ${{ secrets.ACTIONS_ACR_NAME }}.azurecr.io/tredev:latest

      - name: Import Resources
        uses: ./.github/actions/devcontainer_run_command
        with:
          COMMAND: "make terraform-import DIR=templates/core"
          ACTIONS_ACR_NAME: ${{ secrets.ACTIONS_ACR_NAME }}
          ACTIONS_ACR_PASSWORD: ${{ secrets.ACTIONS_ACR_PASSWORD }}
          ARM_TENANT_ID: "${{ secrets.ARM_TENANT_ID }}"
          ARM_CLIENT_ID: "${{ secrets.ARM_CLIENT_ID }}"
          ARM_CLIENT_SECRET: "${{ secrets.ARM_CLIENT_SECRET }}"
          ARM_SUBSCRIPTION_ID: "${{ secrets.ARM_SUBSCRIPTION_ID }}"
          TRE_ID: "${{ secrets.TRE_ID }}"
          LOCATION: ${{ secrets.LOCATION }}
          ACR_NAME: ${{ secrets.ACR_NAME }}
          TF_VAR_terraform_state_container_name:
            ${{ secrets.TF_STATE_CONTAINER }}
          TF_VAR_mgmt_resource_group_name: ${{ secrets.MGMT_RESOURCE_GROUP }}
          TF_VAR_mgmt_storage_account_name:
            ${{ secrets.STATE_STORAGE_ACCOUNT_NAME }}

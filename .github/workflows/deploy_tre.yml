---
name: Deploy Azure TRE

on:
  schedule:
    # 1am each night https://crontab.guru/#0_1_*_*_*
    - cron: "0 1 * * *"
  push:
    branches: [main]
  # TODO: #478 fix for external contributions (forks)
  pull_request:
    types: [labeled]
    branches: [main]
  workflow_dispatch:

# This will prevent multiple runs of this entire workflow.
# We should NOT cancel in progress runs as that can destabilize the environment.
concurrency: "${{ github.workflow }}-${{ github.ref }}"

jobs:
  run-deploy-tre-main:
    name: "Deploy main"
    if: github.ref == 'refs/heads/main'
    uses: ./.github/workflows/deploy_tre_reusable.yml
    with:
      ciGitRef: ${{ github.ref }}
    secrets:
      AAD_TENANT_ID: ${{ secrets.AAD_TENANT_ID }}
      ACR_NAME: ${{ secrets.ACR_NAME }}
      ACTIONS_ACR_NAME: ${{ secrets.ACTIONS_ACR_NAME }}
      ACTIONS_ACR_URI: ${{ secrets.ACTIONS_ACR_NAME }}.azurecr.io/
      ACTIONS_ACR_PASSWORD: ${{ secrets.ACTIONS_ACR_PASSWORD }}
      ACTIONS_DEVCONTAINER_TAG: 'latest'
      API_CLIENT_ID: ${{ secrets.API_CLIENT_ID }}
      API_CLIENT_SECRET: ${{ secrets.API_CLIENT_SECRET }}
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
      CORE_ADDRESS_SPACE: ${{ secrets.CORE_ADDRESS_SPACE }}
      LOCATION: ${{ secrets.LOCATION }}
      MGMT_RESOURCE_GROUP: ${{ secrets.MGMT_RESOURCE_GROUP }}
      MS_TEAMS_WEBHOOK_URI: ${{ secrets.MS_TEAMS_WEBHOOK_URI }}
      STATE_STORAGE_ACCOUNT_NAME: ${{ secrets.STATE_STORAGE_ACCOUNT_NAME }}
      SWAGGER_UI_CLIENT_ID: ${{ secrets.SWAGGER_UI_CLIENT_ID }}
      TEST_APP_ID: ${{ secrets.TEST_APP_ID }}
      TEST_USER_NAME: ${{ secrets.TEST_USER_NAME }}
      TEST_USER_PASSWORD: ${{ secrets.TEST_USER_PASSWORD }}
      TEST_WORKSPACE_APP_ID: ${{ secrets.TEST_WORKSPACE_APP_ID }}
      TF_STATE_CONTAINER: ${{ secrets.TF_STATE_CONTAINER }}
      TRE_ADDRESS_SPACE: ${{ secrets.TRE_ADDRESS_SPACE }}
      TRE_ID: ${{ secrets.TRE_ID }}

  prepare-not-main:
    name: Preparation
    runs-on: ubuntu-latest
    # The conditions below define the desired behaviour of the deployment
    # workflow:
    #   1. NOT for the main branch
    #   2. When a PR is labeled correctly
    #   3. The workflow run when pushed (update on PR branch) or
    #     manually triggered
    if: |
      github.ref != 'refs/heads/main' && (
      github.event_name == 'push'
      || github.event_name == 'workflow_dispatch'
      || contains(github.event.pull_request.labels.*.name, 'safe to test'))
    outputs:
      refid: ${{ steps.run-id.outputs.refid }}
      not-md: ${{ steps.filter.outputs.not-md }}
    steps:
      - id: run-id
        name: Get run id
        run: |
          set -o errexit
          set -o pipefail
          set -o nounset

          # Debug output for checking SHA used in checks-action
          echo "git SHA:    $(git rev-parse --abbrev-ref HEAD)"
          echo "git ref:    $(git rev-parse --abbrev-ref HEAD)"
          echo "github ref: ${GITHUB_REF}"

          REFID=$(echo ${GITHUB_REF} | shasum | cut -c1-8)
          echo "using id of: ${REFID} for GitHub Ref: ${GITHUB_REF}"
          echo "::set-output name=refid::${REFID}"

      - name: Checkout
        # Code is used by orny/paths-filter action but not required for pull requests
        if: ${{ github.event_name != 'pull_request' }}
        uses: actions/checkout@v2
        with:
          persist-credentials: false

      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            not-md:
              # we need to check for changes in files other than *.md
              - '**/!(*.md)'

      # If we don't run the actual deploy (below) we won't receive a check-run status,
      # and will have to send it "manually"
      - name: Bypass E2E check-runs status
        if: ${{ steps.filter.outputs.not-md == 'false' }}
        uses: LouisBrunner/checks-action@v1.1.1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          # the name must be identical to the one received by the real job
          name: "Deploy PR / Run E2E Tests (Smoke)"
          status: "completed"
          conclusion: "success"

  run-deploy-tre-not-main:
    name: "Deploy PR"
    if: ${{ github.ref != 'refs/heads/main' && needs.prepare-not-main.outputs.not-md == 'true' }}
    needs: [prepare-not-main]
    uses: ./.github/workflows/deploy_tre_reusable.yml
    with:
      ciGitRef: ${{ github.ref }}
    secrets:
      AAD_TENANT_ID: ${{ secrets.AAD_TENANT_ID }}
      ACR_NAME: ${{ format('tre{0}', needs.prepare-not-main.outputs.refid) }}
      ACTIONS_ACR_NAME: ${{ secrets.ACTIONS_ACR_NAME }}
      ACTIONS_ACR_URI: ${{ secrets.ACTIONS_ACR_NAME }}.azurecr.io/
      ACTIONS_ACR_PASSWORD: ${{ secrets.ACTIONS_ACR_PASSWORD }}
      ACTIONS_DEVCONTAINER_TAG: ${{ needs.prepare-not-main.outputs.refid }}
      API_CLIENT_ID: ${{ secrets.API_CLIENT_ID }}
      API_CLIENT_SECRET: ${{ secrets.API_CLIENT_SECRET }}
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
      CORE_ADDRESS_SPACE: ${{ secrets.CORE_ADDRESS_SPACE }}
      LOCATION: ${{ secrets.LOCATION }}
      MGMT_RESOURCE_GROUP: ${{ format('rg-tre{0}-mgmt', needs.prepare-not-main.outputs.refid) }}
      MS_TEAMS_WEBHOOK_URI: ${{ secrets.MS_TEAMS_WEBHOOK_URI }}
      STATE_STORAGE_ACCOUNT_NAME: ${{ format('tre{0}mgmt', needs.prepare-not-main.outputs.refid) }}
      SWAGGER_UI_CLIENT_ID: ${{ secrets.SWAGGER_UI_CLIENT_ID }}
      TEST_APP_ID: ${{ secrets.TEST_APP_ID }}
      TEST_USER_NAME: ${{ secrets.TEST_USER_NAME }}
      TEST_USER_PASSWORD: ${{ secrets.TEST_USER_PASSWORD }}
      TEST_WORKSPACE_APP_ID: ${{ secrets.TEST_WORKSPACE_APP_ID }}
      TF_STATE_CONTAINER: ${{ secrets.TF_STATE_CONTAINER }}
      TRE_ADDRESS_SPACE: ${{ secrets.TRE_ADDRESS_SPACE }}
      TRE_ID: ${{ format('tre{0}', needs.prepare-not-main.outputs.refid) }}
      CI_CACHE_ACR_NAME: ${{ secrets.ACR_NAME }}

name: Run E2E tests

on:
  # Manual trigger from the UI
  workflow_dispatch:
    inputs:
      message:
        description: 'Run E2E tests'

  # Dependency to a forking workflow
  workflow_run:
    workflows: ["Deploy Azure TRE"]
    branches: [ sakundu/e2etests-refactor ]
    types:
      - completed

jobs:
  build:
    name: "Run E2E Tests"
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          # Full git history is needed to get a proper list of changed files within `super-linter`
          fetch-depth: 0

      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install dependencies
        run: |
          cd e2e_tests
          python -m pip install --upgrade pip
          pip install pytest
          pip install -r requirements.txt

      - name: Test with pytest
        shell: bash
        env:
          AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}
          AZURE_CONTRIBUTOR_SP: ${{ secrets.AZURE_CONTRIBUTOR_SP }}
          RESOURCE_LOCATION: ${{ secrets.LOCATION }}
          TRE_ID: ${{ secrets.TRE_ID }}
          RESOURCE: '${{ secrets.API_CLIENT_ID }}'
          AUTH_TENANT_ID: '${{ secrets.AAD_TENANT_ID }}'
          CLIENT_ID: ${{ secrets.TEST_APP_ID }}
          USERNAME: '${{ secrets.TEST_USER_NAME }}'
          PASSWORD: '${{ secrets.TEST_USER_PASSWORD }}'
          AUTH_APP_CLIENT_ID: '${{ secrets.TEST_WORKSPACE_APP_ID }}'
        run: |
          export SCOPE=$(echo "api://$RESOURCE/Workspace.Read api://$RESOURCE/Workspace.Write")
          cd e2e_tests
          PYTHONPATH=. python -m pytest --junit-xml pytest.xml

      - name: Upload Unit Test Results
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: E2E Test Results (Python ${{ matrix.python-version }})
          path: './e2e_tests/pytest.xml'

  publish-test-results:
    name: "Publish E2E Tests Results"
    needs: build
    runs-on: ubuntu-latest
    # the build job might be skipped, we don't need to run this job then
    if: success() || failure()

    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v2
        with:
          path: artifacts

      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action@v1
        if: always()
        with:
          files: artifacts/**/*.xml


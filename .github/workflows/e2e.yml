---
name: End to End Tests

on:
  push:
    branches: [ross/ActionsInDevContainer]
  workflow_dispatch:

env:
  USE_ENV_VARS_NOT_FILES: true
  DOCKER_BUILDKIT: 1
  TF_INPUT: 0 # No input supplied to Terraform
  TF_IN_AUTOMATION: 1 # No prompts

jobs:
  e2e_tests:
    name: "Run E2E Tests"
    runs-on: ubuntu-latest
    environment: Dev
    if: |
      github.event.name == 'schedule'
      || github.event_name == 'push'
      || github.event_name == 'workflow_dispatch'
      || contains(github.event.pull_request.labels.*.name, 'safe to test')
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Docker BuildKit
        uses: docker/setup-buildx-action@v1

      - name: Login to Container Registry
        uses: docker/login-action@v1
        with:
          registry: ${{ secrets.ACTIONS_ACR_NAME }}.azurecr.io
          username: ${{ secrets.ACTIONS_ACR_NAME }}
          password: ${{ secrets.ACTIONS_ACR_PASSWORD }}

      - name: End 2 End Tests
        shell: bash
        env:
          ARM_TENANT_ID: "${{ secrets.ARM_TENANT_ID }}"
          ARM_CLIENT_ID: "${{ secrets.ARM_CLIENT_ID }}"
          ARM_CLIENT_SECRET: "${{ secrets.ARM_CLIENT_SECRET }}"
          ARM_SUBSCRIPTION_ID: "${{ secrets.ARM_SUBSCRIPTION_ID }}"
          RESOURCE_LOCATION: "${{ secrets.LOCATION }}"
          RESOURCE: "${{ secrets.API_CLIENT_ID }}"
          AUTH_TENANT_ID: "${{ secrets.AAD_TENANT_ID }}"
          CLIENT_ID: "${{ secrets.TEST_APP_ID }}"
          USERNAME: "${{ secrets.TEST_USER_NAME }}"
          PASSWORD: "${{ secrets.TEST_USER_PASSWORD }}"
          TEST_WORKSPACE_APP_ID: "${{ secrets.TEST_WORKSPACE_APP_ID }}"
          TRE_ID: "${{ secrets.TRE_ID }}"
        run: |
          docker run --rm --mount \
            "type=bind,src=${{ github.workspace }},dst=/workspaces/tre" \
            -v /var/run/docker.sock:/var/run/docker.sock \
            --workdir /workspaces/tre \
            --user vscode \
            -e TF_INPUT \
            -e TF_IN_AUTOMATION \
            -e USE_ENV_VARS_NOT_FILES \
            -e ARM_CLIENT_ID \
            -e ARM_CLIENT_SECRET \
            -e ARM_TENANT_ID \
            -e ARM_SUBSCRIPTION_ID \
            -e RESOURCE_LOCATION \
            -e RESOURCE \
            -e AUTH_TENANT_ID \
            -e CLIENT_ID \
            -e USERNAME \
            -e PASSWORD \
            -e TRE_ID \
            -e TEST_WORKSPACE_APP_ID \
            '${{ secrets.ACTIONS_ACR_NAME }}.azurecr.io/tredev:latest' \
          bash -c "make test-e2e"

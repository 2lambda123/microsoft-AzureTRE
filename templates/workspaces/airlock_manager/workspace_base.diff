diff -Naur ../base/terraform/airlock/data.tf terraform/airlock/data.tf
--- ../base/terraform/airlock/data.tf	2022-08-10 10:15:54.000000000 +0100
+++ terraform/airlock/data.tf	2022-09-14 22:19:06.000000000 +0100
@@ -23,3 +23,8 @@
   resource_group_name = local.core_resource_group_name
   namespace_name      = data.azurerm_servicebus_namespace.airlock_sb.name
 }
+
+data "azurerm_storage_account" "sa_import_inprogress" {
+  name                = local.import_in_progress_storage_name
+  resource_group_name = local.core_resource_group_name
+}
diff -Naur ../base/terraform/airlock/storage_accounts.tf terraform/airlock/storage_accounts.tf
--- ../base/terraform/airlock/storage_accounts.tf	2022-08-17 12:09:06.000000000 +0100
+++ terraform/airlock/storage_accounts.tf	2022-09-14 22:18:19.000000000 +0100
@@ -48,6 +48,30 @@
   }
 }
 
+# 'In progress' storage account
+
+resource "azurerm_private_endpoint" "sa_import_inprogress_pe" {
+  name                = "stg-ip-import-blob-${var.tre_id}-ws-${var.short_workspace_id}"
+  location            = var.location
+  resource_group_name = var.ws_resource_group_name
+  subnet_id           = var.services_subnet_id
+
+  lifecycle { ignore_changes = [tags] }
+
+  private_dns_zone_group {
+    name                 = "private-dns-zone-group-stg-import-ip"
+    private_dns_zone_ids = [data.azurerm_private_dns_zone.blobcore.id]
+  }
+
+  private_service_connection {
+    name                           = "psc-stgipimport-${var.tre_id}"
+    private_connection_resource_id = data.azurerm_storage_account.sa_import_inprogress.id
+    is_manual_connection           = false
+    subresource_names              = ["Blob"]
+  }
+
+  tags = var.tre_workspace_tags
+}
 
 # 'Drop' location for export
 resource "azurerm_storage_account" "sa_export_internal" {
@@ -259,19 +283,59 @@
   }
 }
 
-# we can't use for_each due to the data object
-resource "azurerm_role_assignment" "airlock_blob_data_contributor" {
-  count                = length(local.airlock_blob_data_contributor)
-  scope                = local.airlock_blob_data_contributor[count.index]
-  role_definition_name = "Storage Blob Data Contributor"
+resource "azurerm_role_assignment" "sa_import_approved" {
+  scope                = azurerm_storage_account.sa_import_approved.id
+  role_definition_name = "Contributor"
+  principal_id         = data.azurerm_user_assigned_identity.airlock_id.principal_id
+}
+
+
+resource "azurerm_role_assignment" "sa_export_internal" {
+  scope                = azurerm_storage_account.sa_export_internal.id
+  role_definition_name = "Contributor"
   principal_id         = data.azurerm_user_assigned_identity.airlock_id.principal_id
 }
 
-# This might be considered redundent since we give Virtual Machine Contributor
-# at the subscription level, but best to be explicit.
-resource "azurerm_role_assignment" "api_sa_data_contributor" {
-  count                = length(local.api_sa_data_contributor)
-  scope                = local.api_sa_data_contributor[count.index]
-  role_definition_name = "Storage Blob Data Contributor"
+resource "azurerm_role_assignment" "sa_export_inprogress" {
+  scope                = azurerm_storage_account.sa_export_inprogress.id
+  role_definition_name = "Contributor"
+  principal_id         = data.azurerm_user_assigned_identity.airlock_id.principal_id
+}
+
+resource "azurerm_role_assignment" "sa_export_rejected" {
+  scope                = azurerm_storage_account.sa_export_rejected.id
+  role_definition_name = "Contributor"
+  principal_id         = data.azurerm_user_assigned_identity.airlock_id.principal_id
+}
+
+resource "azurerm_role_assignment" "sa_export_blocked" {
+  scope                = azurerm_storage_account.sa_export_blocked.id
+  role_definition_name = "Contributor"
+  principal_id         = data.azurerm_user_assigned_identity.airlock_id.principal_id
+}
+
+
+resource "azurerm_role_assignment" "sa_import_approved_reader" {
+  scope                = azurerm_storage_account.sa_import_approved.id
+  role_definition_name = "Reader and Data Access"
+  principal_id         = data.azurerm_user_assigned_identity.api_id.principal_id
+}
+
+
+resource "azurerm_role_assignment" "sa_export_internal_reader" {
+  scope                = azurerm_storage_account.sa_export_internal.id
+  role_definition_name = "Reader and Data Access"
+  principal_id         = data.azurerm_user_assigned_identity.api_id.principal_id
+}
+
+resource "azurerm_role_assignment" "sa_export_inprogress_reader" {
+  scope                = azurerm_storage_account.sa_export_inprogress.id
+  role_definition_name = "Reader and Data Access"
+  principal_id         = data.azurerm_user_assigned_identity.api_id.principal_id
+}
+
+resource "azurerm_role_assignment" "sa_export_rejected_reader" {
+  scope                = azurerm_storage_account.sa_export_rejected.id
+  role_definition_name = "Reader and Data Access"
   principal_id         = data.azurerm_user_assigned_identity.api_id.principal_id
 }
diff -Naur ../base/terraform/storage.tf terraform/storage.tf
--- ../base/terraform/storage.tf	2022-08-10 10:15:54.000000000 +0100
+++ terraform/storage.tf	2022-09-14 22:18:19.000000000 +0100
@@ -9,17 +9,6 @@
   lifecycle { ignore_changes = [tags] }
 }
 
-resource "azurerm_storage_share" "shared_storage" {
-  name                 = "vm-shared-storage"
-  storage_account_name = azurerm_storage_account.stg.name
-  quota                = var.shared_storage_quota
-
-  depends_on = [
-    azurerm_private_endpoint.stgfilepe,
-    azurerm_storage_account_network_rules.stgrules
-  ]
-}
-
 resource "azurerm_storage_account_network_rules" "stgrules" {
   storage_account_id = azurerm_storage_account.stg.id
 
diff -Naur ../base/terraform/variables.tf terraform/variables.tf
--- ../base/terraform/variables.tf	2022-08-12 19:02:29.000000000 +0100
+++ terraform/variables.tf	2022-09-14 22:18:19.000000000 +0100
@@ -8,12 +8,6 @@
   description = "Resource ID"
 }
 
-variable "shared_storage_quota" {
-  type        = number
-  default     = 50
-  description = "Quota (in GB) to set for the VM Shared Storage."
-}
-
 variable "location" {
   type        = string
   description = "Azure location (region) for deployment of core TRE services"

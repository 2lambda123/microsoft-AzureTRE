#!/usr/bin/with-contenv sh
set -x
echo >&2 "starting oauth2-proxy"

tar zxvpf /etc/oauth2/oauth2-proxy-v7.2.1.linux-amd64.tar.gz

chmod +x ./oauth2-proxy-v7.2.1.linux-amd64/oauth2-proxy
./oauth2-proxy-v7.2.1.linux-amd64/oauth2-proxy --version

cookiesecret=$(dd if=/dev/urandom bs=32 count=1 2>/dev/null | base64 | tr -d -- '\n' | tr -- '+/' '-_'; echo)

./oauth2-proxy-v7.2.1.linux-amd64/oauth2-proxy \
--provider oidc \
--skip-provider-button \
--cookie-secret ${cookiesecret} \
--oidc-issuer-url ${OAUTH2_PROXY_OIDC_ISSUER_URL} \
--upstream http://0.0.0.0:8080  \
--email-domain ${OAUTH2_PROXY_EMAIL_DOMAIN}  \
--redirect-url ${OAUTH2_PROXY_REDIRECT_URI} --pass-host-header true \
--show-debug-on-error true --pass-authorization-header true --pass-user-headers true \
--http-address http://0.0.0.0:8085 \
--https-address https://0.0.0.0:8086 \
--cookie-secure false \
--reverse-proxy true \
--pass-access-token true \
--pass-authorization-header true \
--set-xauthrequest true \
--pass-basic-auth true \
--scope "openid offline_access api://${AUDIENCE}/user_impersonation"

# --client-id ${OAUTH2_PROXY_CLIENT_ID}  --provider oidc --client-secret ${OAUTH2_PROXY_CLIENT_SECRET} \
# --scope "openid offline_access api://xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/user_impersonation"

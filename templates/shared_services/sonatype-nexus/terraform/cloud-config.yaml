---
#cloud-config
package_upgrade: true
package_update: true
apt:
  sources:
    docker.list:
      source: deb [arch=amd64]
        https://download.docker.com/linux/ubuntu $RELEASE stable
      keyid: 9DC858229FC7DD38854AE2D88D81803C0EBFCD88
      keyserver: hkp://keyserver.ubuntu.com:80

packages:
  - docker-ce
  - docker-ce-cli
  - containerd.io
  - docker-compose
  - gnupg2
  - pass

# create the docker group
groups:
  - docker

# Add default auto created user to docker group
system_info:
  default_user:
    groups: [docker]

write_files:
  # a weekly cron job to have docker free disk space
  - path: /etc/cron.weekly/docker-prune
    content: |
      #!/bin/bash
      set -o errexit
      docker system prune -f
    permissions: '0755'
  # ensure Nexus doesn't create default repositories
  - path: /etc/nexus-data/nexus.properties
    content: |
      nexus.skipDefaultRepositories=true
    permissions: '0755'
  # Write a script that will reset the admin password for Nexus to the one TF generated
  - path: /home/adminuser/reset-nexus-password.sh
    content: |
      #!/bin/bash
      # Get the current password so we can post to the API
      # (this is created in the /nexus-data mounted volume as part of Nexus container start-up in cloud-init)
      password_timeout=120
      echo 'Checking for Nexus admin password file...'
      while [ ! -f /etc/nexus-data/admin.password ]; do
        # We must first wait for the file to be created
        if [ $password_timeout == 0 ]; then
          echo 'ERROR - Timeout while waiting for nexus-data/admin.password to be created'
          exit 1
        fi
        sleep 1
        ((password_timeout--))
      done
      CURRENT_PASSWORD=$(cat /etc/nexus-data/admin.password)

      # Set our own admin password so we can connect to the Nexus repository manager later on using TF KV secret
      reset_timeout=120
      echo 'Nexus default admin password found. Resetting...'
      # While the container is starting up it may return a number of transient errors (i.e. connection reset) which we need to retry until operational
      # NOTE: we can't use curl's built-in retry flags as it doesn't catch for the connection reset response
      res=1
      while test "$res" != "0"; do
        curl -ifu admin:$CURRENT_PASSWORD -XPUT -H 'Content-Type:text/plain' --data '${nexus_admin_password}' \
          http://localhost/service/rest/v1/security/users/admin/change-password
        $res=$?
        echo "Attempt to reset password finished with code $res"
        if test "$res" == "0"; then
          echo 'Password reset successfully. Admin can now log in with secret stored in KeyVault. Nexus configuration complete.'
        else
          if [ $reset_timeout == 0 ]; then
            echo 'ERROR - Timeout while trying to reset Nexus admin password'
            exit 1
          fi
          sleep 5
          ((reset_timeout+=5))
        fi
      done
    permissions: '0744'

runcmd:
  - export DEBIAN_FRONTEND=noninteractive
  # Give the Nexus process write permissions on the folder mounted as persistent volume
  - chown -R 200 /etc/nexus-data
  # Run the nexus container (exposing port 8081 and mapping volume for nexus config)
  - docker run -d
      -p 80:8081 -p 443:8081
      -v /etc/nexus-data:/nexus-data
      --restart always
      --name nexus
      --log-driver local
      sonatype/nexus3
  # Run the script to reset Nexus password (we write this as a script file first to avoid tricky handling of special chars in yml)
  - bash /home/adminuser/reset-nexus-password.sh

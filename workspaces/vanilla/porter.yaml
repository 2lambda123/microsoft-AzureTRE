name: tre-workspace-vanilla
version: 0.1.0
description: "A vanilla Azure TRE workspace"
registry: azuretre

credentials:
- name: azure_tenant_id
  env: AZURE_TENANT_ID
- name: azure_subscription_id
  env: AZURE_SUBSCRIPTION_ID
- name: azure_service_principal_client_id
  env: AZURE_SP_CLIENT_ID
- name: azure_service_principal_password
  env: AZURE_SP_PASSWORD

parameters:
  - name: core_id
    type: string
    description: "Unique 4-digit TRE core ID"
  - name: core_name
    type: string
    description: "TRE core name prefix with environment identifier"
    default: "tre-dev"
  - name: workspace_id
    type: string
    description: "Unique 4-digit workspace ID"
  - name: location
    type: string
    description: "Azure location (region) to deploy to"
  - name: address_space
    type: string
    description: "VNet address space for the workspace services"
    default: "10.2.1.0/24"
  - name: tfstate
    type: file
    path: /cnab/app/terraform/terraform.tfstate
    source:
      output: tfstate

outputs:
  - name: tfstate
    type: file
    path: /cnab/app/terraform/terraform.tfstate
    applyTo:
      - install

mixins:
  - exec
  - terraform:
      clientVersion: 0.14.7

customActions:
  show:
    description: "Invoke 'terraform show'"
    modifies: false
  plan:
    description: "Invoke 'terraform plan'"

install:
  - terraform:
      description: "Deploy workspace"
      vars:
        azure_tenant_id: "{{ bundle.credentials.azure_tenant_id }}"
        azure_subscription_id: "{{ bundle.credentials.azure_subscription_id }}"
        azure_service_principal_client_id: "{{ bundle.credentials.azure_service_principal_client_id }}"
        azure_service_principal_password: "{{ bundle.credentials.azure_service_principal_password }}"
        core_id: "{{ bundle.parameters.core_id }}"
        core_name: "{{ bundle.parameters.core_name }}"
        workspace_id: "{{ bundle.parameters.workspace_id }}"
        location: "{{ bundle.parameters.location }}"
        address_space: "{{ bundle.parameters.address_space }}"

upgrade:
  - exec:
      description: "Upgrade workspace"
      command: echo
      arguments:
        - "This workspace does not implement upgrade action"

show:
  - terraform:
      description: "Invoke 'terraform show'"

plan:
  - terraform:
      description: "Invoke 'terraform plan'"
      flags:
        no-color:
        out: "/dev/null"
        var:
          - "'azure_tenant_id={{ bundle.credentials.azure_tenant_id }}'"
          - "'azure_subscription_id={{ bundle.credentials.azure_subscription_id }}'"
          - "'azure_service_principal_client_id={{ bundle.credentials.azure_service_principal_client_id }}'"
          - "'azure_service_principal_password={{ bundle.credentials.azure_service_principal_password }}'"
          - "'core_id={{ bundle.parameters.core_id }}'"
          - "'core_name={{ bundle.parameters.core_name }}'"
          - "'workspace_id={{ bundle.parameters.workspace_id }}'"
          - "'location={{ bundle.parameters.location }}'"
          - "'address_space={{ bundle.parameters.address_space }}'"

uninstall:
  - terraform:
      description: "Tear down workspace"
      vars:
        azure_tenant_id: "{{ bundle.credentials.azure_tenant_id }}"
        azure_subscription_id: "{{ bundle.credentials.azure_subscription_id }}"
        azure_service_principal_client_id: "{{ bundle.credentials.azure_service_principal_client_id }}"
        azure_service_principal_password: "{{ bundle.credentials.azure_service_principal_password }}"
        core_id: "{{ bundle.parameters.core_id }}"
        core_name: "{{ bundle.parameters.core_name }}"
        workspace_id: "{{ bundle.parameters.workspace_id }}"
        location: "{{ bundle.parameters.location }}"
        address_space: "{{ bundle.parameters.address_space }}"
